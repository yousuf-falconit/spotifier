{"version":3,"sources":["components/Header.js","utils/config.js","utils/albums.js","components/Albums.js","containers/Home.js","routes/index.js","App.js","index.js"],"names":["Header","URLs","handleOk","setButtonLoading","note","albumName","albumReleaseDate","DummyURL","setSubmitted","a","Data","axios","post","handleCancel","setOpenModal","setNote","Albums","useState","albums","setAlbums","openModal","loading","setLoading","setAlbumName","setAlbumReleaseDate","submitted","buttonLoading","useEffect","fetchData","get","BaseURL","response","data","TextArea","Input","columns","title","dataIndex","key","width","render","action","size","onClick","name","release_date","bordered","dataSource","map","album","total_tracks","visible","okText","onOk","onCancel","cancelButtonProps","style","display","okButtonProps","closable","maskClosable","icon","SmileOutlined","extra","type","showCount","maxLength","value","onChange","e","target","Home","padding","index","exact","path","component","App","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1aa74022.chunk.js","sourcesContent":["// Init\r\nimport React from \"react\";\r\n\r\n// Component\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <h1>Spotifier</h1>\r\n    </div>\r\n  );\r\n}\r\n","// Defining base url's\r\nexport const URLs = {\r\n  BaseURL: \"http://localhost:5000\",\r\n  DummyURL: \"https://jsonplaceholder.typicode.com/posts\",\r\n};\r\n","// init\nimport axios from \"axios\";\n\n// Handle Submit\nconst handleOk = async (\n  setButtonLoading,\n  note,\n  albumName,\n  albumReleaseDate,\n  DummyURL,\n  setSubmitted\n) => {\n  if (note) {\n    setButtonLoading(true);\n    const Data = {\n      albumName,\n      albumReleaseDate,\n      note,\n    };\n    await axios.post(DummyURL, Data);\n    setSubmitted(true);\n    setButtonLoading(false);\n  }\n};\n\n// Handle Close\nconst handleCancel = async (setOpenModal, setNote) => {\n  setOpenModal(false);\n  setNote(\"\");\n};\n\n//   Export\nexport { handleOk, handleCancel };\n","// Init\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Table, Space, Button, Modal, Input, Result } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from \"axios\";\r\nimport { URLs } from \"../utils/config\";\r\nimport { SmileOutlined } from \"@ant-design/icons\";\r\nimport { handleOk, handleCancel } from \"../utils/albums\";\r\n\r\n// Album Component\r\nconst Albums = () => {\r\n  // Initializing States\r\n  const [albums, setAlbums] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [albumName, setAlbumName] = useState(\"\");\r\n  const [albumReleaseDate, setAlbumReleaseDate] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [buttonLoading, setButtonLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Fetching data from our respected backend\r\n  const fetchData = async () => {\r\n    const response = await axios.get(`${BaseURL}/api/spotify/getAlbums`);\r\n    setAlbums(response.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Ant Design\r\n  const { TextArea } = Input;\r\n\r\n  // Getting base url\r\n  const { BaseURL, DummyURL } = URLs;\r\n\r\n  // Initializing Table\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 500,\r\n    },\r\n    {\r\n      title: \"Total Tracks\",\r\n      dataIndex: \"total_tracks\",\r\n      key: \"total_tracks\",\r\n      width: 300,\r\n    },\r\n    {\r\n      title: \"Release Date\",\r\n      dataIndex: \"release_date\",\r\n      key: \"release_date\",\r\n      width: 300,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 300,\r\n      render: (action) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            onClick={() => {\r\n              setOpenModal(true);\r\n              setAlbumName(action.name);\r\n              setAlbumReleaseDate(action.release_date);\r\n            }}\r\n          >\r\n            Create Note\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Render\r\n  return (\r\n    <div>\r\n      {/* Table */}\r\n      <Table\r\n        loading={loading}\r\n        columns={columns}\r\n        bordered={true}\r\n        dataSource={albums.map((album) => ({\r\n          name: album.name,\r\n          total_tracks: album.total_tracks,\r\n          release_date: album.release_date,\r\n          action: {\r\n            name: album.name,\r\n            release_date: album.release_date,\r\n          },\r\n        }))}\r\n      />\r\n\r\n      {/* Create Note Modal */}\r\n      <Modal\r\n        title={!submitted && \"Add Note\"}\r\n        visible={openModal}\r\n        okText=\"Submit\"\r\n        onOk={() =>\r\n          handleOk(\r\n            setButtonLoading,\r\n            note,\r\n            albumName,\r\n            albumReleaseDate,\r\n            DummyURL,\r\n            setSubmitted\r\n          )\r\n        }\r\n        onCancel={() => handleCancel(setOpenModal, setNote)}\r\n        cancelButtonProps={submitted && { style: { display: \"none\" } }}\r\n        okButtonProps={{\r\n          loading: buttonLoading,\r\n          style: { display: submitted && \"none\" },\r\n        }}\r\n        closable={false}\r\n        maskClosable={false}\r\n      >\r\n        {/* Note */}\r\n        {!submitted ? (\r\n          <TextArea\r\n            showCount\r\n            maxLength={244}\r\n            value={note}\r\n            onChange={(e) => setNote(e.target.value)}\r\n          />\r\n        ) : (\r\n          // Success\r\n          <Result\r\n            icon={<SmileOutlined />}\r\n            title=\"Great, note have been submitted!\"\r\n            extra={\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  setOpenModal(false);\r\n                  setSubmitted(false);\r\n                  setNote(\"\");\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n            }\r\n          />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export\r\nexport default Albums;\r\n","// Init\r\nimport React from \"react\";\r\n\r\n// Importing Components\r\nimport Header from \"../components/Header\";\r\nimport Albums from \"../components/Albums\";\r\n\r\n// Home Component\r\nexport default function Home() {\r\n  return (\r\n    <div style={{ padding: \"3vh 8vw\" }}>\r\n      <Header />\r\n      <Albums />\r\n    </div>\r\n  );\r\n}\r\n","// Init\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n// Routes\r\nimport Home from \"../containers/Home.js\";\r\n\r\nconst index = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","// Init\r\nimport React from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// Files\r\nimport Index from \"./routes/index\";\r\n\r\n// Component\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Index />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export\r\nexport default App;\r\n","// Init\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n// Rendering DOM\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}